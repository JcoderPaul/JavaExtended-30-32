******* Копирование файла или каталога *******

Мы можем скопировать файл или каталог, используя метод copy(Path, Path, CopyOption...).
Копия завершается ошибкой, если целевой файл существует, и если REPLACE_EXISTING не
указан в качестве параметра - CopyOption.

!!! Особенность копирования каталогов !!!
Каталоги легко можно копировать, при помощи метода *.copy(), однако файлы внутри каталога
не копируются, поэтому новый каталог пуст, даже если исходный каталог содержит файлы.

При копировании символической ссылки копируется цель ссылки. Если мы хотим скопировать саму
ссылку, а не содержимое ссылки, нужно указать параметр NOFOLLOW_LINKS или REPLACE_EXISTING.

Метод *.copy() принимает аргумент varargs. Параметры StandardCopyOption и LinkOption могут
принимать значения:
- REPLACE_EXISTING – выполняет копирование, даже если целевой файл уже существует.
                     Если целью является символическая ссылка, копируется сама ссылка
                     (а не цель ссылки). Если целью является непустой каталог, копирование
                     завершается с ошибкой DirectoryNotEmptyException.
- COPY_ATTRIBUTES – копирует атрибуты файла, связанные с файлом, в целевой файл. Точные
                    поддерживаемые атрибуты файла зависят от файловой системы и платформы,
                    но last-modified-time поддерживаются на разных платформах и копируются
                    в целевой файл.
- NOFOLLOW_LINKS – указывает, что символические ссылки не следует использовать. Если копируемый
                   файл является символической ссылкой, копируется ссылка (а не цель ссылки).

Ниже показано, как использовать метод:
------------------------------------------------------------------------------------------------
...
Files.copy(source, target, REPLACE_EXISTING);
...
------------------------------------------------------------------------------------------------

В дополнение к копированию файла Files класс также определяет методы, которые можно использовать
для копирования между файлом и потоком.

Метод copy(InputStream, Path, CopyOptions...) можно использовать для копирования всех байтов
из входного потока в файл.

Метод copy(Path, OutputStream) можно использовать для копирования всех байтов из файла во
выходной поток.

Более подробно о других методах: 
https://docs.oracle.com/javase/tutorial/essential/io/copy.html